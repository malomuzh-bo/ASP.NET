@page
@model ASP_1711.Pages.CreateModel
@{
}

<form class="row g-3 needs-validation" method="post" enctype="multipart/form-data" novalidate>
	<div class="col-md-5">
		<label for="validationCustom01" class="form-label">The company</label>
		<input type="text" hidden asp-for="QuestRoom!.Id" />
		<input type="text" asp-for="QuestRoom!.Company" class="form-control" required>
		<div class="valid-feedback">
			Correct
		</div>
	</div>
	<div class="col-md-5">
		<label for="validationCustom01" class="form-label">Name of room</label>
		<input type="text" asp-for="QuestRoom!.Name" class="form-control" required>
		<div class="valid-feedback">
			Correct
		</div>
	</div>
	<div class="col-md-2">
		<label for="validationCustom02" class="form-label">Pass time</label>
		<input type="number" asp-for="QuestRoom!.TransitTime" class="form-control" min="2" max="180" required>
		<div class="valid-feedback">
			Correct
		</div>
	</div>
	<div class="row">
		<label for="validationTextarea" class="form-label">Description</label>
		<textarea class="form-control" asp-for=QuestRoom!.Description id="validationTextarea" placeholder="Description..." required></textarea>
		<div class="invalid-feedback">
			Recheck the entered data
		</div>
	</div>
	<div class="col-md-6">
		<label for="validationCustom01" class="form-label">Address</label>
		<input type="text" asp-for="QuestRoom!.Address" class="form-control" required>
		<div class="valid-feedback">
			Correct
		</div>
	</div>

	<div class="accordion col-md-6">
		<div class="accordion-item">
			<h2 class="accordion-header">
				<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen" aria-expanded="true" aria-controls="panelsStayOpen">
					Phone numbers
				</button>
			</h2>
			<div id="panelsStayOpen" class="accordion-collapse collapse" aria-labelledby="panelsStayOpen-headingOne">
				<div class="accordion-body" id="phoneBody">
					<button class="btn btn-warning" type="button" id="addPhone">Add another phone...</button>
					<div class="row">
						<label for="validationCustom01" class="form-label">Phone:
							<input type="text" asp-for="Number!.PhoneNumber" class="form-control" required>
						</label>
						<div class="valid-feedback">
							Correct
						</div>
					</div>
				</div>
			</div>
			<div class="accordion-item">
				<h2 class="accordion-header">
					<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseTwo" aria-expanded="false" aria-controls="panelsStayOpen-collapseTwo">
						Emails
					</button>
				</h2>
				<div id="panelsStayOpen-collapseTwo" class="accordion-collapse collapse" aria-labelledby="panelsStayOpen-headingTwo">
					<div class="accordion-body" id="emailBody">
						<button class="btn btn-warning" type="button" id="addEmail">Add another email...</button>
						<div class="row">
							<label for="validationCustom01" class="form-label">Email: </label>
							<input type="text" asp-for="RoomEmail!.EmailName" class="form-control" required>
							<div class="valid-feedback">
								Correct
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	
	<div class="col-md-6">
		<label for="validationCustomUsername" class="form-label">Player`s quantity</label>
		<div class="input-group has-validation d-flex flex-row">
			<input type="number" asp-for="QuestRoom!.MinPlayers" class="form-control me-3" aria-describedby="inputGroupPrepend" id="minPlayers" min="1" max="100" placeholder="Min..." required>
			<input type="number" asp-for="QuestRoom!.MaxPlayers" class="form-control" aria-describedby="inputGroupPrepend" id="maxPlayers" min="1" max="100" placeholder="Max..." required>
			<div class="invalid-feedback">
				Recheck the entered data
			</div>
		</div>
	</div>
	<div class="col-md-6">
		<label for="validationCustom03" class="form-label">Minimum player`s age</label>
		<input type="number" asp-for="QuestRoom!.MinYear" class="form-control" min="6" max="80" required>
		<div class="invalid-feedback">
			Recheck the entered data
		</div>
  </div>
	<div class="col-md-4">
		<label for="validationCustom04"  class="form-label">Rating</label>
		<select class="form-select" asp-for="QuestRoom!.Rating" required>
			@for (int i = 0; i < 5; i++)
			{
				<option value="@(i + 1)">@(i + 1)</option>
			}
		</select>
		<div class="invalid-feedback">
			Recheck the entered data
		</div>
	</div>
	<div class="col-md-4">
		<label for="validationCustom04" class="form-label">Difficulty</label>
		<select class="form-select" asp-for="QuestRoom!.HardLevel" required>
			@for (int i = 0; i < 5; i++)
				{
					<option value="@(i + 1)">@(i + 1)</option>
				}
		</select>
		<div class="invalid-feedback">
			Recheck the entered data
		</div>
  </div>
	<div class="col-md-4">
		<label for="validationCustom04" class="form-label">Horror level</label>
		<select class="form-select" asp-for="QuestRoom!.ScaryLevel" required>
			@for (int i = 0; i < 5; i++)
				{
					<option value="@(i + 1)">@(i + 1)</option>
				}
		</select>
		<div class="invalid-feedback">
			Recheck the entered data
		</div>
  </div>
	<div class="col-md-6">
		<label for="validationCustom04" class="form-label">Label photo</label>
		<input type="file" asp-for="QuestRoom!.LogoPath" class="form-control" aria-label="file example" required>
		<div class="invalid-feedback">Recheck the entered data</div>
	</div>

	<div class="accordion col-md-6">
		<div class="accordion-item">
			<h2 class="accordion-header">
				<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseOne" aria-expanded="true" aria-controls="panelsStayOpen-collapseOne">
					Gallery
				</button>
			</h2>
			<div id="panelsStayOpen-collapseOne" class="accordion-collapse collapse" aria-labelledby="panelsStayOpen-headingOne">
				<div class="accordion-body" id="galleryBody">
					<button class="btn btn-warning" type="button" id="addImage">Add image...</button>
					<div class="row">
						<label class="form-label">
							Picture:
							<input type="file" name="picture0" class="form-control">
						</label>
					</div>
				</div>
			</div>
		</div>
	</div>
	
	<div class="row mt-5">
		<button class="btn btn-outline-success" type="submit">Add room</button>
	</div>
</form>

@section Scripts{
<script>
  (() => {
	'use strict'
	const forms = document.querySelectorAll('.needs-validation')
	Array.from(forms).forEach(form => {
	  form.addEventListener('submit', ev => {
		if (!form.checkValidity()) {
		  ev.preventDefault()
		  ev.stopPropagation()
		}
		form.classList.add('was-validated')
	  }, false)
	})
  })()
		let maxPl = document.querySelector("#maxPlayers");
		let minPl = document.querySelector("#minPlayers");
		maxPl.addEventListener("change",()=>{
			maxPl.min = minPl.value;
		})
		minPl.addEventListener("change", () => {
			maxPl.min = minPl.value;
			if(maxPl.value < maxPl.min)
				maxPl.value = maxPl.min;
		})
		var numberId = 0;
		document.getElementById("addPhone").addEventListener("click", ()=>{
			let phoneContainer = document.getElementById("phoneBody");
			let mainDiv = document.createElement("div");
			mainDiv.classList.add("row");
			mainDiv.id = `phoneID${numberId}`;
			let label = document.createElement("label");
			label.classList.add("form-label");
			label.classList.add("d-flex");
			label.classList.add("flex-row");
			label.innerText = "Phone:";
			let inp = document.createElement("input");
			inp.type = "text";
			inp.classList.add("form-control");
			inp.name = `phoneNumber${numberId}`;
			let btn = document.createElement("button");
			btn.classList.add("btn");
			btn.classList.add("btn-close");
			btn.addEventListener("click",()=>{
				phoneContainer.removeChild(document.getElementById(mainDiv.id));
				numberId--;
			})
			numberId++;
			label.appendChild(inp);
			label.appendChild(btn);
			let feedback = document.createElement("div");
			feedback.classList.add("valid-feedback");
			feedback.innerText = "Correct";
			mainDiv.appendChild(label);
			mainDiv.appendChild(feedback);
			phoneContainer.appendChild(mainDiv);
		})
		var emailId = 0;
		document.getElementById("addEmail").addEventListener("click", () => {
			let emailContainer = document.getElementById("emailBody");
			let mainDiv = document.createElement("div");
			mainDiv.classList.add("row");
			mainDiv.id = `emailID${emailId}`;
			let label = document.createElement("label");
			label.classList.add("form-label");
			label.classList.add("d-flex");
			label.classList.add("flex-row");
			label.innerText = "Email:";
			let inp = document.createElement("input");
			inp.type = "text";
			inp.classList.add("form-control");
			inp.name = `email${emailId}`;
			let btn = document.createElement("button");
			btn.classList.add("btn");
			btn.classList.add("btn-close");
			btn.addEventListener("click", () => {
				emailContainer.removeChild(document.getElementById(mainDiv.id));
				emailId--;
			})
			emailId++;
			label.appendChild(inp);
			label.appendChild(btn);
			let feedback = document.createElement("div");
			feedback.classList.add("valid-feedback");
			feedback.innerText = "Correct";
			mainDiv.appendChild(label);
			mainDiv.appendChild(feedback);
			emailContainer.appendChild(mainDiv);
		})
		var pictureID = 1;
		document.getElementById("addImage").addEventListener("click", ()=>{
			let galleryContainer = document.getElementById("galleryBody");
			let mainDiv = document.createElement("div");
			mainDiv.classList.add("row");
			mainDiv.id = `pictureID${pictureID}`;
			let label = document.createElement("label");
			label.classList.add("form-label");
			label.classList.add("d-flex");
			label.classList.add("flex-row");
			label.innerText = "Picture:";
			let inp = document.createElement("input");
			inp.type = "file";
			inp.classList.add("form-control");
			inp.name = `picture${pictureID}`;
			let btn = document.createElement("button");
			btn.classList.add("btn");
			btn.classList.add("btn-close");
			btn.addEventListener("click", 
			() => {
				galleryContainer.removeChild(document.getElementById(mainDiv.id));
				pictureID--;
			})
			pictureID++;
			label.appendChild(inp);
			label.appendChild(btn);
			let feedback = document.createElement("div");
			feedback.classList.add("valid-feedback");
			feedback.innerText = "Correct";
			mainDiv.appendChild(label);
			mainDiv.appendChild(feedback);
			galleryContainer.appendChild(mainDiv);
		})
</script>
}